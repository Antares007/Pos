<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:controls="clr-namespace:WpfKb.Controls;assembly=WpfKb">
    <Style x:Key="SanetFontStyle">
        <Setter Property="TextBlock.FontFamily" Value="../../Resources/Fonts/#ALK Sanet"/>
    </Style>
    <Style TargetType="controls:OnScreenKeyboard" x:Key="KeyboardStyle">
        <Setter Property="TextBlock.FontFamily" Value="../../Resources/Fonts/#ALK Sanet"/>
    </Style>
    <Style x:Key="ShowKeyboardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Rectangle HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Fill="{DynamicResource keyboardIcon}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Path Data="M41.857067,16.166999 L6.6650004,39.499998 41.856922,62 41.856922,44.470106 67.000003,44.292067 66.832,32.333332 41.857067,32.052895 z M38,1 C58.434536,1 75,17.565464 75,38 75,58.434536 58.434536,75 38,75 17.565464,75 1.0000005,58.434536 1,38 1.0000005,17.565464 17.565464,1 38,1 z" Fill="#FF00A8EC" HorizontalAlignment="Left" Height="76" Margin="2,2,0,0" Stretch="Fill" Stroke="White" StrokeThickness="2" VerticalAlignment="Top" Width="76"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch">
                        <Ellipse HorizontalAlignment="Left" Height="27.625" Margin="3,3.375,0,0" VerticalAlignment="Top" Width="27.375" Stroke="{DynamicResource BaseColor}" StrokeThickness="5"/>
                        <Path Data="M26,30.5 L31.125,25.125 46.25,40 41,45.125 z" HorizontalAlignment="Left" Height="25" Margin="24,23.125,0,0" Stretch="Fill" Stroke="{DynamicResource BaseColor}" StrokeThickness="4" VerticalAlignment="Top" Width="25.25"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TouchScreenButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="TextBlock.FontFamily" Value="../../Resources/Fonts/#ALK Sanet"/>
		<Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="rectangle1">
                							<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle1">
                							<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                							<EasingColorKeyFrame KeyTime="0" Value="#FF0289BF"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                							<EasingColorKeyFrame KeyTime="0" Value="#B2FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="border" Background="#FF00A8EC" BorderThickness="1" BorderBrush="#FF0082B6">
                			<ContentPresenter 
                				HorizontalAlignment="Center"
                				VerticalAlignment="Center"
                				Margin="{TemplateBinding Padding}"/>
                		</Border>
                		<Rectangle x:Name="rectangle1" HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" StrokeThickness="0" Margin="1,1,1,34">
                			<Rectangle.Fill>
                				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                					<GradientStop Offset="1" Color="#26FFFFFF"/>
                					<GradientStop Color="#59FFFFFF"/>
                				</LinearGradientBrush>
                			</Rectangle.Fill>
                		</Rectangle>
                		<Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Stretch" Fill="Transparent"/>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>